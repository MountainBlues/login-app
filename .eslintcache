[{"D:\\simplilearn\\login-app\\src\\index.js":"1","D:\\simplilearn\\login-app\\src\\reportWebVitals.js":"2","D:\\simplilearn\\login-app\\src\\App.js":"3","D:\\simplilearn\\login-app\\src\\routes\\Routes.jsx":"4","D:\\simplilearn\\login-app\\src\\store\\index.js":"5","D:\\simplilearn\\login-app\\src\\containers\\registration\\Registration.jsx":"6","D:\\simplilearn\\login-app\\src\\containers\\login\\Login.jsx":"7","D:\\simplilearn\\login-app\\src\\saga\\index.js":"8","D:\\simplilearn\\login-app\\src\\reducer\\index.js":"9","D:\\simplilearn\\login-app\\src\\containers\\login\\ducks\\saga.js":"10","D:\\simplilearn\\login-app\\src\\containers\\registration\\ducks\\reducer.js":"11","D:\\simplilearn\\login-app\\src\\containers\\login\\ducks\\reducer.js":"12","D:\\simplilearn\\login-app\\src\\containers\\registration\\ducks\\saga.js":"13","D:\\simplilearn\\login-app\\src\\containers\\login\\ducks\\constant.js":"14","D:\\simplilearn\\login-app\\src\\containers\\login\\ducks\\action.js":"15","D:\\simplilearn\\login-app\\src\\containers\\registration\\ducks\\constant.js":"16","D:\\simplilearn\\login-app\\src\\containers\\registration\\ducks\\action.js":"17","D:\\simplilearn\\login-app\\src\\util\\apiConfig.js":"18","D:\\simplilearn\\login-app\\src\\containers\\dashboard\\Dashboard.jsx":"19","D:\\simplilearn\\login-app\\src\\component\\KickStart.jsx":"20","D:\\simplilearn\\login-app\\src\\component\\usePersistantLogin.js":"21"},{"size":500,"mtime":499162500000,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"23"},{"size":277,"mtime":1607171470808,"results":"25","hashOfConfig":"23"},{"size":653,"mtime":1607236782027,"results":"26","hashOfConfig":"23"},{"size":481,"mtime":1607171600505,"results":"27","hashOfConfig":"23"},{"size":7190,"mtime":1607280095124,"results":"28","hashOfConfig":"23"},{"size":4027,"mtime":1607277499293,"results":"29","hashOfConfig":"23"},{"size":270,"mtime":1607171421260,"results":"30","hashOfConfig":"23"},{"size":303,"mtime":1607170527520,"results":"31","hashOfConfig":"23"},{"size":1073,"mtime":1607278388756,"results":"32","hashOfConfig":"23"},{"size":451,"mtime":1607171763380,"results":"33","hashOfConfig":"23"},{"size":453,"mtime":1607171756386,"results":"34","hashOfConfig":"23"},{"size":1259,"mtime":1607279591248,"results":"35","hashOfConfig":"23"},{"size":174,"mtime":1607168924105,"results":"36","hashOfConfig":"23"},{"size":462,"mtime":1607254011819,"results":"37","hashOfConfig":"23"},{"size":216,"mtime":1607170209307,"results":"38","hashOfConfig":"23"},{"size":553,"mtime":1607279486006,"results":"39","hashOfConfig":"23"},{"size":421,"mtime":1607205797799,"results":"40","hashOfConfig":"23"},{"size":2091,"mtime":1607238441981,"results":"41","hashOfConfig":"23"},{"size":694,"mtime":1607236797369,"results":"42","hashOfConfig":"23"},{"size":670,"mtime":1607238172023,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"kakrxe",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"46"},"D:\\simplilearn\\login-app\\src\\index.js",[],["94","95"],"D:\\simplilearn\\login-app\\src\\reportWebVitals.js",[],"D:\\simplilearn\\login-app\\src\\App.js",["96"],"import logo from './logo.svg';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport Routes from './routes/Routes';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Routes />\n    </Provider>\n  );\n}\n\nexport default App;\n","D:\\simplilearn\\login-app\\src\\routes\\Routes.jsx",[],"D:\\simplilearn\\login-app\\src\\store\\index.js",[],"D:\\simplilearn\\login-app\\src\\containers\\registration\\Registration.jsx",["97","98","99","100"],"import { Button, Container, Snackbar, TextField, Typography, Al } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport { Controller, useForm } from 'react-hook-form'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useDispatch } from 'react-redux';\r\nimport { initiateRegistration } from './ducks/action'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { Alert } from '@material-ui/lab'\r\n\r\nconst useStyles = makeStyles({\r\n    containerStyle: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        height: \"100vh\"\r\n    },\r\n    formContainerStyle: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        padding: 20,\r\n        border: \"1px solid grey\",\r\n        borderRadius: 5,\r\n    },\r\n    textFieldStyle: {\r\n        marginLeft: 10,\r\n        marginRight: 10\r\n    },\r\n    rowStyle: {\r\n        marginBottom: 20\r\n    },\r\n    dateOfBirthStyle: {\r\n        width: \"45%\",\r\n        marginLeft: 10,\r\n        marginRight: 10\r\n    },\r\n    registerBtn: {\r\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n        border: 0,\r\n        borderRadius: 3,\r\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n        color: 'white',\r\n        height: 48,\r\n        padding: '0 30px',\r\n        marginTop: 10\r\n    },\r\n    btnContainerStyle: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n        marginLeft: 10,\r\n        marginRight: 10\r\n    }\r\n})\r\n\r\nconst Registration = () => {\r\n    const [open, setOpen] = useState(false)\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const { control, handleSubmit, errors } = useForm();\r\n\r\n    const onRegistrationSuccess = () => setOpen(true)\r\n    const onRegistrationFailure = (message) => {\r\n        setErrorMessage(message)\r\n        setOpen(true)\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n        setErrorMessage('')\r\n    }\r\n\r\n    const submitHandler = values => dispatch(initiateRegistration(values, onRegistrationSuccess, onRegistrationFailure))\r\n\r\n    return (\r\n        <Container className={classes.containerStyle}>\r\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose} anchorOrigin={{ vertical: 'top', horizontal: 'center' }}>\r\n                <Alert onClose={handleClose} severity={errorMessage ? \"error\" : \"success\"}>\r\n                    {errorMessage ? errorMessage : 'Success! You are now registered member. Please log in'}\r\n                </Alert>\r\n            </Snackbar>\r\n            <form className={classes.formContainerStyle} onSubmit={handleSubmit(submitHandler)}>\r\n                <div className={classes.rowStyle}>\r\n                    <Controller\r\n                        as={TextField}\r\n                        name=\"username\"\r\n                        control={control}\r\n                        defaultValue=\"\"\r\n                        id=\"username\"\r\n                        label=\"User name\"\r\n                        className={classes.textFieldStyle}\r\n                        rules={{ required: true }}\r\n                        error={errors && errors.username ? true : false}\r\n                        helperText={errors && errors.username && \"User name is required.\"}\r\n                    />\r\n                    <Controller\r\n                        as={TextField}\r\n                        name=\"password\"\r\n                        control={control}\r\n                        defaultValue=\"\"\r\n                        id=\"password\"\r\n                        label=\"Password\"\r\n                        className={classes.textFieldStyle}\r\n                        rules={{ required: true }}\r\n                        error={errors && errors.password ? true : false}\r\n                        helperText={errors && errors.password && \"Password is required.\"}\r\n                    />\r\n                </div>\r\n                <div className={classes.rowStyle}>\r\n                    <Controller\r\n                        as={TextField}\r\n                        name=\"firstname\"\r\n                        control={control}\r\n                        defaultValue=\"\"\r\n                        id=\"firstname\"\r\n                        label=\"First name\"\r\n                        className={classes.textFieldStyle}\r\n                        rules={{ required: true }}\r\n                        error={errors && errors.firstname ? true : false}\r\n                        helperText={errors && errors.firstname && \"First name is required.\"}\r\n                    />\r\n                    <Controller\r\n                        as={TextField}\r\n                        name=\"lastname\"\r\n                        control={control}\r\n                        defaultValue=\"\"\r\n                        id=\"lastname\"\r\n                        label=\"Last name\"\r\n                        className={classes.textFieldStyle}\r\n                        rules={{ required: true }}\r\n                        error={errors && errors.lastname ? true : false}\r\n                        helperText={errors && errors.lastname && \"Last name is required.\"}\r\n                    />\r\n                </div>\r\n                <div className={classes.rowStyle}>\r\n                    <Controller\r\n                        as={TextField}\r\n                        name=\"dob\"\r\n                        control={control}\r\n                        id=\"dob\"\r\n                        label=\"Date Of Birth\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        defaultValue={(new Date()).toISOString().split('T')[0]}\r\n                        type=\"date\"\r\n                        className={classes.dateOfBirthStyle}\r\n                        rules={{ required: true }}\r\n                        error={errors && errors.dob ? true : false}\r\n                        helperText={errors && errors.dob && \"Date of birth is required.\"}\r\n                    />\r\n                    <Controller\r\n                        as={TextField}\r\n                        name=\"city\"\r\n                        control={control}\r\n                        defaultValue=\"\"\r\n                        id=\"city\"\r\n                        label=\"Place of birth\"\r\n                        className={classes.textFieldStyle}\r\n                        rules={{ required: true }}\r\n                        error={errors && errors.city ? true : false}\r\n                        helperText={errors && errors.city && \"Place of birth is required.\"}\r\n                    />\r\n                </div>\r\n                <div className={classes.btnContainerStyle}>\r\n                    <Typography>\r\n                        <a href=\"javascript:void(0)\" onClick={() => history.push('/login')}>\r\n                            Already registered? Please log in\r\n                        </a>\r\n                    </Typography>\r\n                    <Button type=\"submit\" className={classes.registerBtn}>Register</Button>\r\n                </div>\r\n            </form>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Registration","D:\\simplilearn\\login-app\\src\\containers\\login\\Login.jsx",["101","102","103"],"D:\\simplilearn\\login-app\\src\\saga\\index.js",[],"D:\\simplilearn\\login-app\\src\\reducer\\index.js",[],"D:\\simplilearn\\login-app\\src\\containers\\login\\ducks\\saga.js",[],"D:\\simplilearn\\login-app\\src\\containers\\registration\\ducks\\reducer.js",[],"D:\\simplilearn\\login-app\\src\\containers\\login\\ducks\\reducer.js",["104"],"const { INITIATE_LOGIN, INITIATE_LOGIN_SUCCESS } = require(\"./constant\")\r\n\r\nconst initialState = {\r\n    userDetails: {}\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    const { type } = action\r\n    switch(type) {\r\n        case INITIATE_LOGIN_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                userDetails: action.payload\r\n            }\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default reducer","D:\\simplilearn\\login-app\\src\\containers\\registration\\ducks\\saga.js",["105"],"import { all, call, put, takeEvery } from \"redux-saga/effects\";\r\nimport { invoke } from \"../../../util/apiConfig\";\r\nimport { initiateRegistrationFailure, initiateRegistrationSuccess } from \"./action\";\r\nimport { INITIATE_REGISTRATION, INITIATE_REGISTRATION_SUCCESS } from \"./constant\";\r\n\r\nfunction* initiateRegistration(action) {\r\n    const { user, onRegistrationSuccess, onRegistrationFailure } = action\r\n    try {\r\n        const response = yield call(invoke, '/register', {\r\n            method: \"POST\",\r\n            body: JSON.stringify(user)\r\n        })\r\n        const data = yield response.json()\r\n        if (response.status === 201) {\r\n            yield put(initiateRegistrationSuccess(data))\r\n            if (typeof onRegistrationSuccess === 'function') {\r\n                onRegistrationSuccess()\r\n            }\r\n        } else {\r\n            yield put(initiateRegistrationFailure(data))\r\n            if (typeof onRegistrationFailure === 'function') {\r\n                onRegistrationFailure(data.status)\r\n            }\r\n        }\r\n    } catch (error) {\r\n        yield put(initiateRegistrationFailure(error))\r\n    }\r\n}\r\n\r\n\r\nexport default function* watchAll() {\r\n    yield all([\r\n        takeEvery(INITIATE_REGISTRATION, initiateRegistration)\r\n    ]);\r\n}","D:\\simplilearn\\login-app\\src\\containers\\login\\ducks\\constant.js",[],"D:\\simplilearn\\login-app\\src\\containers\\login\\ducks\\action.js",[],"D:\\simplilearn\\login-app\\src\\containers\\registration\\ducks\\constant.js",[],"D:\\simplilearn\\login-app\\src\\containers\\registration\\ducks\\action.js",[],"D:\\simplilearn\\login-app\\src\\util\\apiConfig.js",[],"D:\\simplilearn\\login-app\\src\\containers\\dashboard\\Dashboard.jsx",["106"],"import { Button, Card, CardActions, CardContent, Container, makeStyles, Typography } from '@material-ui/core'\r\nimport React, { useCallback } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport usePersistantLogin from '../../component/usePersistantLogin'\r\n\r\nconst useStyles = makeStyles({\r\n    containerStyle: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        height: \"100vh\"\r\n    },\r\n    root: {\r\n        minWidth: 300,\r\n    },\r\n    logoutBtn: {\r\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n        border: 0,\r\n        borderRadius: 3,\r\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n        color: 'white',\r\n    },\r\n    cardActionStyle: {\r\n        display: \"flex\",\r\n        justifyContent: \"flex-end\"\r\n    }\r\n})\r\n\r\nconst Dashboard = () => {\r\n    const classes = useStyles()\r\n    const history = useHistory()\r\n    usePersistantLogin()\r\n    const user = useSelector(state => state.loginReducer.userDetails) || {}\r\n    const logoutHandler = useCallback(() => {\r\n        sessionStorage.setItem(\"user\", \"\")\r\n        history.push(\"/login\")\r\n    })\r\n\r\n    return (\r\n        <Container className={classes.containerStyle}>\r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    <Typography variant=\"h5\" component=\"h2\">\r\n                        {user.firstname} {user.lastname}\r\n                    </Typography>\r\n                    <Typography color=\"textSecondary\">\r\n                        DOB: {user.dob}\r\n                    </Typography>\r\n                    <Typography color=\"textSecondary\">\r\n                        City: {user.city}\r\n                    </Typography>\r\n                </CardContent>\r\n                <CardActions className={classes.cardActionStyle}>\r\n                    <Button className={classes.logoutBtn} size=\"small\" onClick={logoutHandler}>Log Out</Button>\r\n                </CardActions>\r\n            </Card>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Dashboard","D:\\simplilearn\\login-app\\src\\component\\KickStart.jsx",["107","108"],"import React, { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { initiateLoginSuccess } from '../containers/login/ducks/action'\r\n\r\nconst KickStart = () => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        const userString = sessionStorage.getItem(\"user\")\r\n        if (userString && typeof JSON.parse(userString) === 'object') {\r\n            dispatch(initiateLoginSuccess(JSON.parse(userString)))\r\n            history.push('/dashboard')\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n    }, [])\r\n\r\n    return null\r\n}\r\n\r\nexport default KickStart","D:\\simplilearn\\login-app\\src\\component\\usePersistantLogin.js",["109","110"],"import React, { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { initiateLoginSuccess } from '../containers/login/ducks/action'\r\n\r\nconst usePersistantLogin = () => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        const userString = sessionStorage.getItem(\"user\")\r\n        if (userString && typeof JSON.parse(userString) === 'object') {\r\n            dispatch(initiateLoginSuccess(JSON.parse(userString)))\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n    }, [])\r\n\r\n    return null\r\n}\r\n\r\nexport default usePersistantLogin",{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":1,"column":8,"nodeType":"117","messageId":"118","endLine":1,"endColumn":12},{"ruleId":"115","severity":1,"message":"119","line":1,"column":62,"nodeType":"117","messageId":"118","endLine":1,"endColumn":64},{"ruleId":"115","severity":1,"message":"120","line":7,"column":10,"nodeType":"117","messageId":"118","endLine":7,"endColumn":14},{"ruleId":"121","severity":1,"message":"122","line":167,"column":25,"nodeType":"123","endLine":167,"endColumn":93},{"ruleId":"124","severity":1,"message":"125","line":167,"column":33,"nodeType":"126","messageId":"127","endLine":167,"endColumn":53},{"ruleId":"115","severity":1,"message":"120","line":8,"column":10,"nodeType":"117","messageId":"118","endLine":8,"endColumn":14},{"ruleId":"121","severity":1,"message":"122","line":103,"column":21,"nodeType":"123","endLine":103,"endColumn":92},{"ruleId":"124","severity":1,"message":"125","line":103,"column":29,"nodeType":"126","messageId":"127","endLine":103,"endColumn":49},{"ruleId":"115","severity":1,"message":"128","line":1,"column":9,"nodeType":"117","messageId":"118","endLine":1,"endColumn":23},{"ruleId":"115","severity":1,"message":"129","line":4,"column":33,"nodeType":"117","messageId":"118","endLine":4,"endColumn":62},{"ruleId":"130","severity":1,"message":"131","line":35,"column":27,"nodeType":"117","endLine":35,"endColumn":38},{"ruleId":"115","severity":1,"message":"132","line":1,"column":8,"nodeType":"117","messageId":"118","endLine":1,"endColumn":13},{"ruleId":"130","severity":1,"message":"133","line":18,"column":8,"nodeType":"134","endLine":18,"endColumn":10,"suggestions":"135"},{"ruleId":"115","severity":1,"message":"132","line":1,"column":8,"nodeType":"117","messageId":"118","endLine":1,"endColumn":13},{"ruleId":"130","severity":1,"message":"133","line":16,"column":8,"nodeType":"134","endLine":16,"endColumn":10,"suggestions":"136"},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Al' is defined but never used.","'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","'INITIATE_LOGIN' is assigned a value but never used.","'INITIATE_REGISTRATION_SUCCESS' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","'React' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["139"],["140"],"no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},{"desc":"141","fix":"143"},"Update the dependencies array to be: [dispatch, history]",{"range":"144","text":"145"},{"range":"146","text":"145"},[641,643],"[dispatch, history]",[608,610]]